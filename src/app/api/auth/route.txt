import NextAuth from "next-auth";
import GoogleProvider from "next-auth/providers/google";

const handler = NextAuth({
  providers: [
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      authorization: {
        params: {
          prompt: "consent",
          access_type: "offline",
          response_type: "code",
          scope: "openid profile email https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/documents"
        }
      }
    }), // Closing bracket for GoogleProvider configuration
  ],
  pages: {
    error: "/dashboard/login",
  },
  secret: process.env.NEXTAUTH_SECRET,
  callbacks: {
    async signIn({ account, profile }) {
      if (account.provider === "google") {
        return profile.email_verified && profile.email.endsWith("@gmail.com")
      }
      return true // Do different verification for other providers that don't have `email_verified`
    },
    async jwt({ token, user, account, profile, isNewUser }) {
      if (user) {
        token.id = user.id;
      }
      if (account) {
        token.accessToken = account.access_token;
       
      }
      return token;
    },
    async session({ session, token }) {
      // Access and store desired attributes from the token
      session.user.name = token.name;
      session.user.email = token.email;
      session.user.image = token.picture;
      session.user.accessToken = token.accessToken; // Store accessToken in the session
     
    
      return session;
    },
    
    
  },
});

export { handler as GET, handler as POST };
